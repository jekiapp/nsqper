// Code generated by MockGen. DO NOT EDIT.
// Source: internal/usecase/acl/group/create_group.go
//
// Generated by this command:
//
//	Cursor-0.48.8-x86_64.AppImage -source=internal/usecase/acl/group/create_group.go -destination=internal/usecase/acl/group/mock/mock_create_group_repo.go -package=group_mock
//

// Package group_mock is a generated GoMock package.
package group_mock

import (
	reflect "reflect"

	acl "github.com/jekiapp/topic-master/internal/model/acl"
	gomock "go.uber.org/mock/gomock"
)

// MockiCreateGroupRepo is a mock of iCreateGroupRepo interface.
type MockiCreateGroupRepo struct {
	ctrl     *gomock.Controller
	recorder *MockiCreateGroupRepoMockRecorder
}

// MockiCreateGroupRepoMockRecorder is the mock recorder for MockiCreateGroupRepo.
type MockiCreateGroupRepoMockRecorder struct {
	mock *MockiCreateGroupRepo
}

// NewMockiCreateGroupRepo creates a new mock instance.
func NewMockiCreateGroupRepo(ctrl *gomock.Controller) *MockiCreateGroupRepo {
	mock := &MockiCreateGroupRepo{ctrl: ctrl}
	mock.recorder = &MockiCreateGroupRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockiCreateGroupRepo) EXPECT() *MockiCreateGroupRepoMockRecorder {
	return m.recorder
}

// CreateGroup mocks base method.
func (m *MockiCreateGroupRepo) CreateGroup(group acl.Group) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateGroup", group)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateGroup indicates an expected call of CreateGroup.
func (mr *MockiCreateGroupRepoMockRecorder) CreateGroup(group any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateGroup", reflect.TypeOf((*MockiCreateGroupRepo)(nil).CreateGroup), group)
}

// GetGroupByName mocks base method.
func (m *MockiCreateGroupRepo) GetGroupByName(name string) (acl.Group, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGroupByName", name)
	ret0, _ := ret[0].(acl.Group)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGroupByName indicates an expected call of GetGroupByName.
func (mr *MockiCreateGroupRepoMockRecorder) GetGroupByName(name any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGroupByName", reflect.TypeOf((*MockiCreateGroupRepo)(nil).GetGroupByName), name)
}
