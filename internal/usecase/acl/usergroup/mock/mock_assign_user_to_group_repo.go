// Code generated by MockGen. DO NOT EDIT.
// Source: assign_user_to_group.go
//
// Generated by this command:
//
//	mockgen -source=assign_user_to_group.go -destination=mock/mock_assign_user_to_group_repo.go -package=usergroup_mock
//

// Package usergroup_mock is a generated GoMock package.
package usergroup_mock

import (
	reflect "reflect"

	acl "github.com/jekiapp/topic-master/internal/model/acl"
	gomock "go.uber.org/mock/gomock"
)

// MockiUserGroupRepo is a mock of iUserGroupRepo interface.
type MockiUserGroupRepo struct {
	ctrl     *gomock.Controller
	recorder *MockiUserGroupRepoMockRecorder
	isgomock struct{}
}

// MockiUserGroupRepoMockRecorder is the mock recorder for MockiUserGroupRepo.
type MockiUserGroupRepoMockRecorder struct {
	mock *MockiUserGroupRepo
}

// NewMockiUserGroupRepo creates a new mock instance.
func NewMockiUserGroupRepo(ctrl *gomock.Controller) *MockiUserGroupRepo {
	mock := &MockiUserGroupRepo{ctrl: ctrl}
	mock.recorder = &MockiUserGroupRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockiUserGroupRepo) EXPECT() *MockiUserGroupRepoMockRecorder {
	return m.recorder
}

// CreateUserGroup mocks base method.
func (m *MockiUserGroupRepo) CreateUserGroup(userGroup acl.UserGroup) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUserGroup", userGroup)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUserGroup indicates an expected call of CreateUserGroup.
func (mr *MockiUserGroupRepoMockRecorder) CreateUserGroup(userGroup any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUserGroup", reflect.TypeOf((*MockiUserGroupRepo)(nil).CreateUserGroup), userGroup)
}

// GetUserGroup mocks base method.
func (m *MockiUserGroupRepo) GetUserGroup(userID, groupID string) (acl.UserGroup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserGroup", userID, groupID)
	ret0, _ := ret[0].(acl.UserGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserGroup indicates an expected call of GetUserGroup.
func (mr *MockiUserGroupRepoMockRecorder) GetUserGroup(userID, groupID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserGroup", reflect.TypeOf((*MockiUserGroupRepo)(nil).GetUserGroup), userID, groupID)
}
